; vim:ft=nasm et sw=4 ts=4

    ; %1=name %2=string
%macro define_error_message 2
    section .data
    align 8
error_message_%1:
    db %2
    db 10
    db 0
error_message_%1_len:
    %strlen error_message_%1_len_macro %2
    dq error_message_%1_len_macro + 1
%endmacro

    define_error_message nice, 'nice!!!!!!'
    define_error_message goodbye, 'goodbye'
    define_error_message brk_failed, 'brk() failed'
    define_error_message read_failed, 'read() failed'
    define_error_message bad_number_literal, 'bad number literal'

    ; %1=name %2=code
%macro set_error 1-2 1
    mov rsi, error_message_%1
    mov rdx, [error_message_%1_len]
    mov rcx, %2
%endmacro

    ; rsi = error message, rdx = message len, rcx = code
    ; typically use set_error macro
    section .text
    align 8
error_exit:
    ; write(fd, buf, count)
    mov rax, syscall_write
    mov rdi, 1               ; fd
    ;   rsi                  ; buf
    ;   rdx                  ; len
    syscall

    ; exit(status)
    mov rdi, rcx             ; status
    mov rax, syscall_exit
    syscall
